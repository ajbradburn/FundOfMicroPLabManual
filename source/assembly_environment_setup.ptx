<?xml version='1.0' encoding='utf-8'?>

<chapter xml:id="ch-first" xmlns:xi="http://www.w3.org/2001/XInclude">

  <!-- Title -->
  <xi:include href="./titles/assembly_environment_setup.ptx" />
  
  <!-- Introduction -->
  <xi:include href="./introductions/assembly_environment_setup.ptx" />

  <section>
      <!-- I want to experiment with blocks, for page breaks. -->
      <title>Installing Code::Blocks IDE in Raspberry Pi OS</title>
      <subsection>
        <p>
          For our purposes, we are going to use Code::Blocks IDE. To install it:
        </p>
        <figure>
          <caption>Opening Add / Remove Software</caption>
          <image source="screenshots/codeblocks_setup/main_menu-add_remove_software.png">
            <description>A view of the navigation path to <em>Add / Remove Software</em> in the Raspberry Pi OS main menu.</description>
          </image>
        </figure>
        <ol>
          <li> Click <em>main menu</em> (Raspberry Pi Icon on the Taskbar)</li>
          <li>... <em>Preferences</em></li>
          <li>... <em>Add / Remove Software</em></li>
        </ol>
      </subsection>
      <subsection>
      <p>
        When the <em>Add / Remove Software</em> window opens.
      </p>
      <figure>
        <caption>Selecting software in Add / Remove Software</caption>
        <image source="screenshots/codeblocks_setup/add_remove_software-selecting_codeblocks.png">
          <description>Searching for, and selecting software to install in the <em>Add / Remove Software</em> tool in Raspberry Pi OS.</description>
        </image>
      </figure>
      <ol>
        <li>Type "codeblocks" in the search field at the top left</li>
        <li>Wait for the list of software to load</li>
        <li>Check the box for <em>Code::Blocks integrated development environment (IDE)</em></li>
        <li>Click <em>Apply</em></li>
      </ol>
    </subsection>
    <subsection>
      <p>
        Next you'll be prompted with an <em>Authentication</em> window, where you'll need to type in the password you've recently created, and click <em>OK</em>.
      </p>
      <figure>
        <caption>Authentication Window</caption>
        <image source="screenshots/codeblocks_setup/add_remove_software-authentication.png">
          <description>Authentication window for the software installation request <em>Add / Remove Software</em> tool in Raspberry Pi OS.</description>
        </image>
      </figure>
      <p>
        Finally, wait a while while the software installs. When complete, click <em>OK</em> to close the <em>Add / Remove Software</em> window.
      </p>
    </subsection>
  </section>

  <section>
    <title>Writing and Debugging Programs</title>
    <introduction>
      <p>
        We will go into more detail about the process of programming in later exercises.
        For now, the expectation is that you will simply follow steps as you are guided through the process of using Code::Blocks IDE to write and debug a simple program.
        We wont go into detail about what the program does, or why bits of text are included. That will come later. 
        The goal with this exercise is to simply expose you to the process as a whole. So see, and do.
        That way, when we discuss the material in more depth, you've actual experience to reflect upon.
      </p>
    </introduction>
    <subsection>
      <p>
        To begin, open <em>Code::Blocks IDE</em>.
      </p>
      <figure>
        <caption>Opening Code::Blocks IDE</caption>
        <image source="screenshots/codeblocks_first_program/main_menu-codeblocks.png">
          <description>A view of the navigation path to <em>Code::Blocks IDE</em> in the Raspberry Pi OS main menu.</description>
        </image>
      </figure>
      <ol>
        <li> Click <em>main menu</em> (Raspberry Pi Icon on the Taskbar)</li>
        <li>... <em>Programming</em></li>
        <li>... <em>Code::Blocks IDE</em></li>
      </ol>
      <figure>
        <caption>Code::Blocks IDE Layout</caption>
        <image source="screenshots/codeblocks_first_program/codeblocks-layout.png">
          <description>A view of a newly opened codeblocks window.</description>
        </image>
      </figure>
  </subsection>

  <subsection>
    <p>
      Create a new project.
    </p>
    <figure>
      <caption>Creating a new project in Code::Blocks IDE</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-new_project.png">
        <description>The navigation path for starting a new project in Code::Blocks IDE.</description>
      </image>
    </figure>
    <ol>
      <li>Click <em>File</em></li>
      <li>... <em>New</em></li>
      <li>... <em>Project...</em></li>
    </ol>
  </subsection>
  <subsection>
    <p>
      When the <em>New from template</em> window opens.
    </p>
    <figure>
      <caption>Select <em>Console application</em> for your new project.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-console_application.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Select <em>Console application</em></li>
      <li>Click <em>Go</em></li>
    </ol>
  </subsection>
  <subsection>
    <p>
      When the <em>Console application wizard</em> window opens
    </p>
    <figure>
      <caption>The console application wizard introduction screen.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-console_app_wizard.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click <em>Next</em></li>
    </ol>
  </subsection>
  <subsection>
    <figure>
      <caption>The console application wizard language selection window.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-wizard-language_selection.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Select <em>C</em></li>
      <li>Click <em>Next</em></li>
    </ol>
  </subsection>
  <subsection>
    <figure>
      <caption>The console application wizard project title and save location window.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-wizard-project_definition.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Type the project name, or title in the <em>Project title:</em> field. In this case, <em>sum</em></li>
      <li>Enter the path to where you project will be saved in the <em>Folder to create project in:</em> field. You can type this out, or click the <em>button</em> to the right of the field to select it using the file browser.</li>
    </ol>
  </subsection>
  <subsection>
    <figure>
      <caption>The console application wizard compiler configuration window.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-wizard-compiler_selection.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click <em>Finish</em></li>
    </ol>
  </subsection>

  <subsection>
    <p>
      Now that your project is established, we need to make a few customizations for it to work well with our assembly code.
    </p>
    <p>
      The new project was setup with a main.c file that includes some framework code. We don't need that, so we are going to remove the file from the project, and create a new blank file for our program.
    </p>
    <figure>
      <caption></caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-remove_main_c.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click the triangle next to <em>Sources</em> to list its contents</li>
      <li>Right-click <em>main.c</em></li>
      <li>Click <em>Remove file from project</em></li>
    </ol>
  </subsection>
  <subsection>
    <figure>
      <caption>The navigation path for adding a new empty file using the file menu.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-new_empty_file.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click <em>File</em></li>
      <li>... <em>New</em></li>
      <li>... <em>Empty File</em></li>
    </ol>
  </subsection>
  <subsection>
    <p>
      When prompted to add file to the active project.
    </p>
    <figure>
      <caption>The <em>Add file to project</em> window.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-add_file_to_project.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click <em>Yes</em></li>
    </ol>
  </subsection>
  <subsection>
    <p>
      When presented with the <em>Save file</em> window.
    </p>
    <figure>
      <caption>The <em>Save file</em> window.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-save-sum.s.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Type the name of the file, in this case <em>sum.s</em></li>
      <li>Click <em>Save</em></li>
    </ol>
  </subsection>
  <subsection>
    <p>
      When presented with the <em>Multiple selection</em> window.
    </p>
    <figure>
      <caption>The <em>Multiple selection</em> window.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-save-select_targets.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click <em>OK</em></li>
    </ol>
  </subsection>
  <subsection>
    <p>
      In <em>sum.s</em> document, type out the following code. When done, save.
    </p>
    <listing>
      <title>sum.s</title>
      <caption>A simple introductory program.</caption>
      <!-- TODO: The documentation suggests that the code tags should instead be program tags. However, that isn't being rendered at this time.
      pretext-cli v0.6.0 -->
      <program>
        <input>
          .global main
          .func main

          main:
            mov r1, #3
            mov r2, #4
            add r0, r1, r2
            bx lr
        </input>
      </program>
    </listing>
    <figure>
      <caption>The <em>sum</em> program.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-type_program.png">
        <description></description>
      </image>
    </figure>
  </subsection>
  <subsection>
    <p>
      Now that our program is written, we can see it in action by:
    </p>
    <ol>
      <li>Click <em>Build</em> in the menu bar.</li>
      <li>... <em>Run</em></li>
    </ol>
    <p>
      OR
    </p>
    <figure>
      <caption>Select the active debugger for your application.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-run_program.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click the <em>Run</em> (green arrow) shortcut in the toolbar.</li>
    </ol>
    <p>
      If everything was typed correctly, you should see little window pop up and present to you the result of running your program. However, if there are errors, you're going to need to do some debugging, and that is what we will illustrate next.
    </p>
    <p>
      Because the program functions by executing one step at a time, you can follow the progress of the application by adding <em>break points</em> to the program in the IDE. These function as stop-and-wait points in the program and enable you to take time and review expected states for things.
    </p>
    <p>
      In our case, we are moving data into registers of the processor, and then adding up the values from two different registers into a third. As the program advances through the steps, we should be able to see the values of these registers change.
    </p>
    <p>
      To see this debugging process in action, do the following:
    </p>
    <figure>
      <caption>Select the active debugger for your application.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-select_debugger.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click <em>Debug</em> in the menu bar.</li>
      <li>... <em>Active debuggers</em></li>
      <li>... <em>GDB/CDB debugger: Default</em></li>
    </ol>
    <p>
      There are other debugging options, but this one works well for us now. In time, you may need a different one.
    </p>
  </subsection>
  <subsection>
    <p>
      Add break points to the program.
    </p>
    <figure>
      <caption>Adding break points to the program.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-add_breakpoints.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click in the space to the right of the line number.</li>
    </ol>
    <p>
      To remove a break point:
    </p>
    <ol>
      <li>Click on the red dot that indicates a break point.</li>
    </ol>
  </subsection>
  <subsection>
    <p>
      Run the program in debug mode.
    </p>
    <figure>
      <caption>The <em>Debug / Contue</em> shortcut in the toolbar.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-click_debug.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click the <em>Debug / Continue</em> (red arrow) shortcut in the toolbar.</li>
    </ol>
    <p>
      OR
    </p>
    <ol>
      <li>Click <em>Debug</em></li>
      <li>... <em>Start / Continue</em></li>
    </ol>
  </subsection>
  <subsection>
    <p>
      At this point, things will start happening on the screen.
    </p>
    <ul>
      <li> A program console pop up on the screen, and maybe disappear.</li>
      <li>The layout will change slightly.</li>
    </ul>
    <p>When asked to save the layout change:</p>
    <figure>
      <caption>Notification that the layout has changed.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-layout_changed.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click <em>Yes</em></li>
    </ol>
  </subsection>
  <subsection>
    <p>
      To see the register values as we advance through our application:
    </p>
    <figure>
      <caption>Navigation path for selecting <em>CPU Registers</em> from the <em>Debug</em> menu.</caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-debug_window-cpu_registers.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click <em>Debug</em></li>
      <li>... <em>Debugging windows</em></li>
      <li>... <em>CPU Registers</em></li>
    </ol>
  </subsection>
  <subsection>
    <p>
      There should now see a window in the foreground that displays register names, and values in both hexadecimal, and decimal.
    </p>
    <p>
      To see the values change as our program executes, step-by-step:
    </p>
    <figure>
      <caption></caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-debug-step.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click the <em>Next line</em> shortcut in the toolbar</li>
      <li>View the register values</li>
      <li>Repeat</li>
    </ol>
    <p>
      As you advance through the program, you may notice a little yellow arrow overlaying the red break point symbols to indicate which one it is currently waiting at.
    </p>
    <p>
      You may also notice messages in the <em>Debugger</em> logs in the bottom panel of the screen.
    </p>
    <p>
      These can be useful references for later.
    </p>
  </subsection>
  <subsection>
    <p>
      When you've stepped through the entire program, stop the debugger:
    </p>
    <figure>
      <caption></caption>
      <image source="screenshots/codeblocks_first_program/codeblocks-stop_debugger.png">
        <description></description>
      </image>
    </figure>
    <ol>
      <li>Click the <em>Stop debugger</em> shortcut in the toolbar.</li>
    </ol>
  </subsection>
  </section>

  <exercise>
    <title>Reflections</title>
    <task>
      <statement>
        What, if any, experience do you have with programming?
      </statement>
    </task>
    <task>
      <statement>
        The Rapsberry Pi uses an ARM processor. What are some other popular microprocessor designers?
      </statement>
    </task>
  </exercise>
</chapter>
